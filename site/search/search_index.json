{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Algotia ? Algotia is free and open source platform for authoring and executing technical analysis based cryptocurrency trading strategies.","title":"What is Algotia ?"},{"location":"#what-is-algotia","text":"Algotia is free and open source platform for authoring and executing technical analysis based cryptocurrency trading strategies.","title":"What is Algotia ?"},{"location":"configuration/","text":"Configuration When you run a command with Algotia, one of the first tasks that Algotia performs is validating your configuration file. Algotia scans the directory that it is installed in for a file named config.yaml . Algotia does not create a configuration for you. You must create one yourself. The config.yaml file can be in any location, however we recommend placing the file in a directory named config . The configuration file must have the following shape. exchange: exchangeId: EXCHANGE ID (string) // Exchange ID, from cxxt (https://github.com/ccxt/ccxt) apiKey: API KEY (string) // API Key from exchange. Note: Only use 1 API Key / Secret per bot instance. apiSecret: API SECRET (sting) // API Secret from exchange. timeout: TIMEOUT (number) // Timeout between API calls. Number is in milliseconds. Find the list of ccxt Exchange IDs here: Exchange Markets \u00b7 ccxt/ccxt Wiki . The following is an example with keys from Binance documentation. exchange: exchangeId: binance apiKey: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A apiSecret: NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j timeout: 5000","title":"Configuration"},{"location":"configuration/#configuration","text":"When you run a command with Algotia, one of the first tasks that Algotia performs is validating your configuration file. Algotia scans the directory that it is installed in for a file named config.yaml . Algotia does not create a configuration for you. You must create one yourself. The config.yaml file can be in any location, however we recommend placing the file in a directory named config . The configuration file must have the following shape. exchange: exchangeId: EXCHANGE ID (string) // Exchange ID, from cxxt (https://github.com/ccxt/ccxt) apiKey: API KEY (string) // API Key from exchange. Note: Only use 1 API Key / Secret per bot instance. apiSecret: API SECRET (sting) // API Secret from exchange. timeout: TIMEOUT (number) // Timeout between API calls. Number is in milliseconds. Find the list of ccxt Exchange IDs here: Exchange Markets \u00b7 ccxt/ccxt Wiki . The following is an example with keys from Binance documentation. exchange: exchangeId: binance apiKey: vmPUZE6mv9SD5VNHk4HlWFsOr6aKE2zvsw0MuIgwCIPy6utIco14y7Ju91duEh8A apiSecret: NhqPtmdSJYdKjVHjA7PZj4Mge3R5YNiP1e3UZjInClVN65XAbvqqM6A7H5fATj0j timeout: 5000","title":"Configuration"},{"location":"quick-start/","text":"Quick Start Guide Requirements Node.js Windows/Linux/MacOS/Docker Install Algotia From your console, run the following command $ git clone https://github.com/Algotia/Algotia.git Change directories into Algotia and create a configuration file. Algotia searches the root of the project for a file named config.yaml , we recommend you put it in a directory named config . $ cd Algotia $ mkdir config $ touch ./config/config.yaml Install the dependencies $ npm install Link the bin script to local /bin/ $ npm link From inside the project directory, you can now run Algotia. `bash $ algotia [command] [options]","title":"Quick Start Guide"},{"location":"quick-start/#quick-start-guide","text":"","title":"Quick Start Guide"},{"location":"quick-start/#requirements","text":"Node.js Windows/Linux/MacOS/Docker","title":"Requirements"},{"location":"quick-start/#install-algotia","text":"From your console, run the following command $ git clone https://github.com/Algotia/Algotia.git Change directories into Algotia and create a configuration file. Algotia searches the root of the project for a file named config.yaml , we recommend you put it in a directory named config . $ cd Algotia $ mkdir config $ touch ./config/config.yaml Install the dependencies $ npm install Link the bin script to local /bin/ $ npm link From inside the project directory, you can now run Algotia. `bash $ algotia [command] [options]","title":"Install Algotia"}]}